   0  $accept : programa $end

   1  programa : sentDec sentEjec

   2  sentDec : dVar
   3          | sentDec dVar

   4  sentEjec : sentencia ','
   5           | sentEjec sentencia ','

   6  dVar : tipo listVar ','
   7       | LET MUT tipo listVarMut ','
   8       | LET tipo asignacionLET ','

   9  listVar : ID
  10          | listVar ';' ID

  11  listVarMut : VarMut
  12             | listVarMut ';' VarMut

  13  VarMut : ID
  14         | '*' ID

  15  tipo : LINTEGER
  16       | DOUBLE

  17  sentencia : estructIf
  18            | estructLoop
  19            | asignacion
  20            | imprimir

  21  asignacion : asignSimple
  22             | asignDeclar

  23  asignSimple : ID ASIG expresion
  24              | '*' ID ASIG expresion

  25  asignDeclar : tipo ID ASIG expresion

  26  estructIf : IF '(' condicion ')' bloqueSent END_IF
  27            | IF '(' condicion ')' bloqueSent ELSE bloqueSent END_IF

  28  estructLoop : LOOP bloqueSent UNTIL '(' condicion ')' ','

  29  bloqueSent : sentencia ','
  30             | '{' conjSent '}'

  31  conjSent : sentencia ','
  32           | conjSent sentencia ','

  33  condicion : expresion comparador expresion

  34  comparador : '<'
  35             | '>'
  36             | MENIGUAL
  37             | MAYIGUAL
  38             | '='
  39             | DISTINTO

  40  asignacionLET : ID ASIG CTE

  41  expresion : expresion '+' termino
  42            | expresion '-' termino
  43            | termino

  44  termino : termino '*' factor
  45          | termino '/' factor
  46          | factor

  47  factor : ID
  48         | CTE
  49         | '-' CTE
  50         | '&' ID
  51         | '*' ID

  52  imprimir : PRINT '(' CADENA ')'

state 0
	$accept : . programa $end  (0)

	LINTEGER  shift 1
	DOUBLE  shift 2
	LET  shift 3
	.  error

	programa  goto 4
	sentDec  goto 5
	dVar  goto 6
	tipo  goto 7


state 1
	tipo : LINTEGER .  (15)

	.  reduce 15


state 2
	tipo : DOUBLE .  (16)

	.  reduce 16


state 3
	dVar : LET . MUT tipo listVarMut ','  (7)
	dVar : LET . tipo asignacionLET ','  (8)

	LINTEGER  shift 1
	DOUBLE  shift 2
	MUT  shift 8
	.  error

	tipo  goto 9


state 4
	$accept : programa . $end  (0)

	$end  accept


state 5
	programa : sentDec . sentEjec  (1)
	sentDec : sentDec . dVar  (3)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	LET  shift 3
	IF  shift 13
	'*'  shift 14
	.  error

	sentEjec  goto 15
	dVar  goto 16
	sentencia  goto 17
	tipo  goto 18
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24


state 6
	sentDec : dVar .  (2)

	.  reduce 2


state 7
	dVar : tipo . listVar ','  (6)

	ID  shift 25
	.  error

	listVar  goto 26


state 8
	dVar : LET MUT . tipo listVarMut ','  (7)

	LINTEGER  shift 1
	DOUBLE  shift 2
	.  error

	tipo  goto 27


state 9
	dVar : LET tipo . asignacionLET ','  (8)

	ID  shift 28
	.  error

	asignacionLET  goto 29


state 10
	asignSimple : ID . ASIG expresion  (23)

	ASIG  shift 30
	.  error


state 11
	imprimir : PRINT . '(' CADENA ')'  (52)

	'('  shift 31
	.  error


state 12
	estructLoop : LOOP . bloqueSent UNTIL '(' condicion ')' ','  (28)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	'{'  shift 32
	.  error

	sentencia  goto 33
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24
	bloqueSent  goto 35


state 13
	estructIf : IF . '(' condicion ')' bloqueSent END_IF  (26)
	estructIf : IF . '(' condicion ')' bloqueSent ELSE bloqueSent END_IF  (27)

	'('  shift 36
	.  error


state 14
	asignSimple : '*' . ID ASIG expresion  (24)

	ID  shift 37
	.  error


state 15
	programa : sentDec sentEjec .  (1)
	sentEjec : sentEjec . sentencia ','  (5)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	$end  reduce 1

	sentencia  goto 38
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24


state 16
	sentDec : sentDec dVar .  (3)

	.  reduce 3


state 17
	sentEjec : sentencia . ','  (4)

	','  shift 39
	.  error


state 18
	dVar : tipo . listVar ','  (6)
	asignDeclar : tipo . ID ASIG expresion  (25)

	ID  shift 40
	.  error

	listVar  goto 26


state 19
	sentencia : estructIf .  (17)

	.  reduce 17


state 20
	sentencia : estructLoop .  (18)

	.  reduce 18


state 21
	sentencia : asignacion .  (19)

	.  reduce 19


state 22
	sentencia : imprimir .  (20)

	.  reduce 20


state 23
	asignacion : asignSimple .  (21)

	.  reduce 21


state 24
	asignacion : asignDeclar .  (22)

	.  reduce 22


state 25
	listVar : ID .  (9)

	.  reduce 9


state 26
	dVar : tipo listVar . ','  (6)
	listVar : listVar . ';' ID  (10)

	','  shift 41
	';'  shift 42
	.  error


state 27
	dVar : LET MUT tipo . listVarMut ','  (7)

	ID  shift 43
	'*'  shift 44
	.  error

	listVarMut  goto 45
	VarMut  goto 46


state 28
	asignacionLET : ID . ASIG CTE  (40)

	ASIG  shift 47
	.  error


state 29
	dVar : LET tipo asignacionLET . ','  (8)

	','  shift 48
	.  error


state 30
	asignSimple : ID ASIG . expresion  (23)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 54
	termino  goto 55
	factor  goto 56


state 31
	imprimir : PRINT '(' . CADENA ')'  (52)

	CADENA  shift 57
	.  error


state 32
	bloqueSent : '{' . conjSent '}'  (30)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	.  error

	sentencia  goto 58
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24
	conjSent  goto 59


state 33
	bloqueSent : sentencia . ','  (29)

	','  shift 60
	.  error


state 34
	asignDeclar : tipo . ID ASIG expresion  (25)

	ID  shift 61
	.  error


state 35
	estructLoop : LOOP bloqueSent . UNTIL '(' condicion ')' ','  (28)

	UNTIL  shift 62
	.  error


state 36
	estructIf : IF '(' . condicion ')' bloqueSent END_IF  (26)
	estructIf : IF '(' . condicion ')' bloqueSent ELSE bloqueSent END_IF  (27)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 63
	condicion  goto 64
	termino  goto 55
	factor  goto 56


state 37
	asignSimple : '*' ID . ASIG expresion  (24)

	ASIG  shift 65
	.  error


state 38
	sentEjec : sentEjec sentencia . ','  (5)

	','  shift 66
	.  error


state 39
	sentEjec : sentencia ',' .  (4)

	.  reduce 4


state 40
	listVar : ID .  (9)
	asignDeclar : tipo ID . ASIG expresion  (25)

	ASIG  shift 67
	','  reduce 9
	';'  reduce 9


state 41
	dVar : tipo listVar ',' .  (6)

	.  reduce 6


state 42
	listVar : listVar ';' . ID  (10)

	ID  shift 68
	.  error


state 43
	VarMut : ID .  (13)

	.  reduce 13


state 44
	VarMut : '*' . ID  (14)

	ID  shift 69
	.  error


state 45
	dVar : LET MUT tipo listVarMut . ','  (7)
	listVarMut : listVarMut . ';' VarMut  (12)

	','  shift 70
	';'  shift 71
	.  error


state 46
	listVarMut : VarMut .  (11)

	.  reduce 11


state 47
	asignacionLET : ID ASIG . CTE  (40)

	CTE  shift 72
	.  error


state 48
	dVar : LET tipo asignacionLET ',' .  (8)

	.  reduce 8


state 49
	factor : ID .  (47)

	.  reduce 47


state 50
	factor : CTE .  (48)

	.  reduce 48


state 51
	factor : '-' . CTE  (49)

	CTE  shift 73
	.  error


state 52
	factor : '*' . ID  (51)

	ID  shift 74
	.  error


state 53
	factor : '&' . ID  (50)

	ID  shift 75
	.  error


state 54
	asignSimple : ID ASIG expresion .  (23)
	expresion : expresion . '+' termino  (41)
	expresion : expresion . '-' termino  (42)

	'+'  shift 76
	'-'  shift 77
	','  reduce 23


state 55
	expresion : termino .  (43)
	termino : termino . '*' factor  (44)
	termino : termino . '/' factor  (45)

	'*'  shift 78
	'/'  shift 79
	MAYIGUAL  reduce 43
	MENIGUAL  reduce 43
	DISTINTO  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	','  reduce 43
	')'  reduce 43
	'<'  reduce 43
	'>'  reduce 43
	'='  reduce 43


state 56
	termino : factor .  (46)

	.  reduce 46


state 57
	imprimir : PRINT '(' CADENA . ')'  (52)

	')'  shift 80
	.  error


state 58
	conjSent : sentencia . ','  (31)

	','  shift 81
	.  error


state 59
	bloqueSent : '{' conjSent . '}'  (30)
	conjSent : conjSent . sentencia ','  (32)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	'}'  shift 82
	.  error

	sentencia  goto 83
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24


state 60
	bloqueSent : sentencia ',' .  (29)

	.  reduce 29


state 61
	asignDeclar : tipo ID . ASIG expresion  (25)

	ASIG  shift 67
	.  error


state 62
	estructLoop : LOOP bloqueSent UNTIL . '(' condicion ')' ','  (28)

	'('  shift 84
	.  error


state 63
	condicion : expresion . comparador expresion  (33)
	expresion : expresion . '+' termino  (41)
	expresion : expresion . '-' termino  (42)

	MAYIGUAL  shift 85
	MENIGUAL  shift 86
	DISTINTO  shift 87
	'+'  shift 76
	'-'  shift 77
	'<'  shift 88
	'>'  shift 89
	'='  shift 90
	.  error

	comparador  goto 91


state 64
	estructIf : IF '(' condicion . ')' bloqueSent END_IF  (26)
	estructIf : IF '(' condicion . ')' bloqueSent ELSE bloqueSent END_IF  (27)

	')'  shift 92
	.  error


state 65
	asignSimple : '*' ID ASIG . expresion  (24)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 93
	termino  goto 55
	factor  goto 56


state 66
	sentEjec : sentEjec sentencia ',' .  (5)

	.  reduce 5


state 67
	asignDeclar : tipo ID ASIG . expresion  (25)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 94
	termino  goto 55
	factor  goto 56


state 68
	listVar : listVar ';' ID .  (10)

	.  reduce 10


state 69
	VarMut : '*' ID .  (14)

	.  reduce 14


state 70
	dVar : LET MUT tipo listVarMut ',' .  (7)

	.  reduce 7


state 71
	listVarMut : listVarMut ';' . VarMut  (12)

	ID  shift 43
	'*'  shift 44
	.  error

	VarMut  goto 95


state 72
	asignacionLET : ID ASIG CTE .  (40)

	.  reduce 40


state 73
	factor : '-' CTE .  (49)

	.  reduce 49


state 74
	factor : '*' ID .  (51)

	.  reduce 51


state 75
	factor : '&' ID .  (50)

	.  reduce 50


state 76
	expresion : expresion '+' . termino  (41)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	termino  goto 96
	factor  goto 56


state 77
	expresion : expresion '-' . termino  (42)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	termino  goto 97
	factor  goto 56


state 78
	termino : termino '*' . factor  (44)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	factor  goto 98


state 79
	termino : termino '/' . factor  (45)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	factor  goto 99


state 80
	imprimir : PRINT '(' CADENA ')' .  (52)

	.  reduce 52


state 81
	conjSent : sentencia ',' .  (31)

	.  reduce 31


state 82
	bloqueSent : '{' conjSent '}' .  (30)

	.  reduce 30


state 83
	conjSent : conjSent sentencia . ','  (32)

	','  shift 100
	.  error


state 84
	estructLoop : LOOP bloqueSent UNTIL '(' . condicion ')' ','  (28)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 63
	condicion  goto 101
	termino  goto 55
	factor  goto 56


state 85
	comparador : MAYIGUAL .  (37)

	.  reduce 37


state 86
	comparador : MENIGUAL .  (36)

	.  reduce 36


state 87
	comparador : DISTINTO .  (39)

	.  reduce 39


state 88
	comparador : '<' .  (34)

	.  reduce 34


state 89
	comparador : '>' .  (35)

	.  reduce 35


state 90
	comparador : '=' .  (38)

	.  reduce 38


state 91
	condicion : expresion comparador . expresion  (33)

	ID  shift 49
	CTE  shift 50
	'-'  shift 51
	'*'  shift 52
	'&'  shift 53
	.  error

	expresion  goto 102
	termino  goto 55
	factor  goto 56


state 92
	estructIf : IF '(' condicion ')' . bloqueSent END_IF  (26)
	estructIf : IF '(' condicion ')' . bloqueSent ELSE bloqueSent END_IF  (27)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	'{'  shift 32
	.  error

	sentencia  goto 33
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24
	bloqueSent  goto 103


state 93
	asignSimple : '*' ID ASIG expresion .  (24)
	expresion : expresion . '+' termino  (41)
	expresion : expresion . '-' termino  (42)

	'+'  shift 76
	'-'  shift 77
	','  reduce 24


state 94
	asignDeclar : tipo ID ASIG expresion .  (25)
	expresion : expresion . '+' termino  (41)
	expresion : expresion . '-' termino  (42)

	'+'  shift 76
	'-'  shift 77
	','  reduce 25


state 95
	listVarMut : listVarMut ';' VarMut .  (12)

	.  reduce 12


state 96
	expresion : expresion '+' termino .  (41)
	termino : termino . '*' factor  (44)
	termino : termino . '/' factor  (45)

	'*'  shift 78
	'/'  shift 79
	MAYIGUAL  reduce 41
	MENIGUAL  reduce 41
	DISTINTO  reduce 41
	'+'  reduce 41
	'-'  reduce 41
	','  reduce 41
	')'  reduce 41
	'<'  reduce 41
	'>'  reduce 41
	'='  reduce 41


state 97
	expresion : expresion '-' termino .  (42)
	termino : termino . '*' factor  (44)
	termino : termino . '/' factor  (45)

	'*'  shift 78
	'/'  shift 79
	MAYIGUAL  reduce 42
	MENIGUAL  reduce 42
	DISTINTO  reduce 42
	'+'  reduce 42
	'-'  reduce 42
	','  reduce 42
	')'  reduce 42
	'<'  reduce 42
	'>'  reduce 42
	'='  reduce 42


state 98
	termino : termino '*' factor .  (44)

	.  reduce 44


state 99
	termino : termino '/' factor .  (45)

	.  reduce 45


state 100
	conjSent : conjSent sentencia ',' .  (32)

	.  reduce 32


state 101
	estructLoop : LOOP bloqueSent UNTIL '(' condicion . ')' ','  (28)

	')'  shift 104
	.  error


state 102
	condicion : expresion comparador expresion .  (33)
	expresion : expresion . '+' termino  (41)
	expresion : expresion . '-' termino  (42)

	'+'  shift 76
	'-'  shift 77
	')'  reduce 33


state 103
	estructIf : IF '(' condicion ')' bloqueSent . END_IF  (26)
	estructIf : IF '(' condicion ')' bloqueSent . ELSE bloqueSent END_IF  (27)

	ELSE  shift 105
	END_IF  shift 106
	.  error


state 104
	estructLoop : LOOP bloqueSent UNTIL '(' condicion ')' . ','  (28)

	','  shift 107
	.  error


state 105
	estructIf : IF '(' condicion ')' bloqueSent ELSE . bloqueSent END_IF  (27)

	ID  shift 10
	PRINT  shift 11
	LINTEGER  shift 1
	DOUBLE  shift 2
	LOOP  shift 12
	IF  shift 13
	'*'  shift 14
	'{'  shift 32
	.  error

	sentencia  goto 33
	tipo  goto 34
	estructIf  goto 19
	estructLoop  goto 20
	asignacion  goto 21
	imprimir  goto 22
	asignSimple  goto 23
	asignDeclar  goto 24
	bloqueSent  goto 108


state 106
	estructIf : IF '(' condicion ')' bloqueSent END_IF .  (26)

	.  reduce 26


state 107
	estructLoop : LOOP bloqueSent UNTIL '(' condicion ')' ',' .  (28)

	.  reduce 28


state 108
	estructIf : IF '(' condicion ')' bloqueSent ELSE bloqueSent . END_IF  (27)

	END_IF  shift 109
	.  error


state 109
	estructIf : IF '(' condicion ')' bloqueSent ELSE bloqueSent END_IF .  (27)

	.  reduce 27


35 terminals, 24 nonterminals
53 grammar rules, 110 states
